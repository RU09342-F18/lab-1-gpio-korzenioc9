/*
created by Cameron Korzeniowski
created 9/11/2018
*/

#include <msp430.h>

int main(void) {

    WDTCTL = WDTPW + WDTHOLD; //stop watchdog timer

    P1SEL &= ~BIT0; //sets pin 1.0 as an I/O
    P1OUT &= ~BIT0; //initializes the state of the LED
    P1DIR |= BIT0; //sets the I/O direction as output

    P4SEL &= ~BIT7; //sets pin 4.7 as an I/O
    P4OUT &= ~BIT7; //initializes the state of the LED
    P4DIR |= BIT7; //sets the I/O direction as output

    volatile unsigned int n, i; //CREATES VARIABLE TO BE INCREMENTED

    i = 10000; //SETS THE VALUES OF THE VARIABLES
    n = 50000; //THESE VALUES CONTROL THE BLINK RATES OF THE TWO LEDS, HIGHER NUMBER = SLOWER BLINK

    for (;;)
    {

    n--; //VARIABLES ARE CONTINUOUSLY DECRIMENTED
    i--;

    if (n==0) //ACTIVATES IF STATEMENT WHEN N REACHES 0
    {
        P1OUT ^= BIT0; //TOGGLES THE OUTPUT STATE TO BLINK THE LED
        n = 50000; //RESETS THE VALUE OF N SO THE CYCLE CAN CONTINUE
    }
    if (i==0) //ACTIVATES IF STATEMENT WHEN I REACHES 0
    {
    P4OUT ^= BIT7; //TOGGLES THE OUTPUT STATE TO BLINK THE LED
    i = 10000; //RESETS THE VALUE OF I SO THE CYCLE CAN CONTINUE
    }
    }

return(0);
}
